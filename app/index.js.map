{
  "version": 3,
  "sources": ["../src/electron_app/index.ts", "../src/electron_app/ipcCommunication.ts"],
  "sourcesContent": ["import { app, BrowserWindow, session } from \"electron\";\nimport { join } from \"path\";\nimport { pathToFileURL, format as formatUrl } from \"url\";\nimport ipcCommunication from \"./ipcCommunication\";\n\nconst isDevelopment = process.env.NODE_ENV === \"development\";\n\nconst preloadPath = join(__dirname, \"preload.js\");\nconsole.log(preloadPath);\n\n// follow https://www.electronjs.org/docs/latest/tutorial/security#3-enable-context-isolation-for-remote-content\n// for a secure approach;\n\nfunction createWindow() {\n  const win = new BrowserWindow({\n    width: 800,\n    height: 600,\n    webPreferences: {\n      // 2) from security\n      nodeIntegration: false,\n      preload: preloadPath,\n\n      // 3) from security\n      contextIsolation: true,\n\n      // 4) from security\n      sandbox: true,\n\n      // 6) from security\n      webSecurity: true,\n    },\n    show: false,\n  }).once(\"ready-to-show\", () => {\n    win.show();\n  });\n  if (isDevelopment) {\n    win.loadURL(\"http://localhost:3000\");\n    win.webContents.toggleDevTools();\n  } else {\n    win.loadURL(\n      pathToFileURL(join(__dirname, \"./renderer/index.html\")).toString()\n    );\n  }\n}\n\napp.whenReady().then(createWindow);\n\napp.on(\"window-all-closed\", () => {\n  if (process.platform !== \"darwin\") {\n    app.quit();\n  }\n});\n\napp.on(\"activate\", () => {\n  if (BrowserWindow.getAllWindows().length === 0) {\n    createWindow();\n  }\n});\n\napp.on('ready', () => {\n  const csp = isDevelopment ? [\"default-src 'self' localhost:*; style-src 'unsafe-inline' *\"] : [\"default-src 'self'; style-src 'unsafe-inline' *\"]\n  session.defaultSession.webRequest.onHeadersReceived((details, callback) => {\n    callback({\n      responseHeaders: {\n        ...details.responseHeaders,\n        \"Content-Security-Policy\": csp,\n      },\n    });\n  });\n})\n\nipcCommunication(app);\n", "import { App, ipcMain } from \"electron\";\r\n\r\nexport default (app: App) => {\r\n  ipcMain.on(\"get-app-data-path\", (event) => {\r\n    event.returnValue = app.getPath(\"userData\");\r\n  });\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA,uBAA4C;AAC5C,kBAAqB;AACrB,iBAAmD;;;ACFnD,sBAA6B;AAE7B,IAAO,2BAAQ,CAAC,SAAa;AAC3B,0BAAQ,GAAG,qBAAqB,CAAC,UAAU;AACzC,UAAM,cAAc,KAAI,QAAQ;AAAA;AAAA;;;ADCpC,IAAM,gBAAgB,QAAQ,IAAI,aAAa;AAE/C,IAAM,cAAc,sBAAK,WAAW;AACpC,QAAQ,IAAI;AAKZ,wBAAwB;AACtB,QAAM,MAAM,IAAI,+BAAc;AAAA,IAC5B,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,gBAAgB;AAAA,MAEd,iBAAiB;AAAA,MACjB,SAAS;AAAA,MAGT,kBAAkB;AAAA,MAGlB,SAAS;AAAA,MAGT,aAAa;AAAA;AAAA,IAEf,MAAM;AAAA,KACL,KAAK,iBAAiB,MAAM;AAC7B,QAAI;AAAA;AAEN,MAAI,eAAe;AACjB,QAAI,QAAQ;AACZ,QAAI,YAAY;AAAA,SACX;AACL,QAAI,QACF,8BAAc,sBAAK,WAAW,0BAA0B;AAAA;AAAA;AAK9D,qBAAI,YAAY,KAAK;AAErB,qBAAI,GAAG,qBAAqB,MAAM;AAChC,MAAI,QAAQ,aAAa,UAAU;AACjC,yBAAI;AAAA;AAAA;AAIR,qBAAI,GAAG,YAAY,MAAM;AACvB,MAAI,+BAAc,gBAAgB,WAAW,GAAG;AAC9C;AAAA;AAAA;AAIJ,qBAAI,GAAG,SAAS,MAAM;AACpB,QAAM,MAAM,gBAAgB,CAAC,iEAAiE,CAAC;AAC/F,2BAAQ,eAAe,WAAW,kBAAkB,CAAC,SAAS,aAAa;AACzE,aAAS;AAAA,MACP,iBAAiB;AAAA,WACZ,QAAQ;AAAA,QACX,2BAA2B;AAAA;AAAA;AAAA;AAAA;AAMnC,yBAAiB;",
  "names": []
}
